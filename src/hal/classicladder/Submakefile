ifdef HAVE_GTK
CLASSICLADDERSRCS := $(addprefix hal/classicladder/, \
	arithm_eval.c \
	arrays.c \
	calc.c \
	calc_sequential.c \
	classicladder.c \
	classicladder_gtk.c \
	config.c \
	config_gtk.c \
	drawing.c \
	drawing_sequential.c \
	edit.c \
	edit_gtk.c \
	edit_sequential.c \
	editproperties_gtk.c \
	emc_mods.c \
	files.c \
	files_project.c \
	files_sequential.c \
	manager.c \
	manager_gtk.c \
	protocol_modbus_master.c \
	protocol_modbus_slave.c \
	serial_linux.c \
	socket_modbus_master.c \
	socket_server.c \
	spy_vars_gtk.c \
	symbols.c \
	symbols_gtk.c \
	vars_names.c \
	vars_access.c \
        ) hal/utils/miscgtk.c

GTK_CFLAGS += -DGTK_INTERFACE -DGTK2
ifeq ($(HAVE_GNOMEPRINT),yes)
CLASSICLADDERSRCS += hal/classicladder/print_gnome.c
GTK_CFLAGS += -DGNOME_PRINT_USE
endif


$(call TOOBJSDEPS,$(CLASSICLADDERSRCS)) : EXTRAFLAGS = $(GTK_CFLAGS) -DSEQUENTIAL_SUPPORT -DHAL_SUPPORT -DDYNAMIC_PLCSIZE -DRT_SUPPORT -DOLD_TIMERS_MONOS_SUPPORT -DMODBUS_IO_MASTER
$(call TOOBJS, $(CLASSICLADDERSRCS)): Makefile.inc

USERSRCS += $(CLASSICLADDERSRCS)

../bin/classicladder: $(call TOOBJS, $(CLASSICLADDERSRCS)) ../lib/liblinuxcnchal.so.0
	$(ECHO) Linking $(notdir $@)
	@$(CC) $(LDFLAGS) $(CFLAGS) $(ULFLAGS) -o $@ $^ $(GTK_LIBS) -lpthread

TARGETS += ../bin/classicladder
endif

# Can't use the macro for this, since there's no classicladder_rt.c file
obj-m += classicladder_rt.o
classicladder_rt-objs := hal/classicladder/module_hal.o
classicladder_rt-objs += hal/classicladder/arithm_eval.o
classicladder_rt-objs += hal/classicladder/arrays.o
classicladder_rt-objs += hal/classicladder/calc.o
classicladder_rt-objs += hal/classicladder/calc_sequential.o
classicladder_rt-objs += hal/classicladder/manager.o
classicladder_rt-objs += hal/classicladder/symbols.o
classicladder_rt-objs += hal/classicladder/vars_access.o
ifdef SEQUENTIAL_SUPPORT
classicladder_rt-objs += hal/classicladder/calc_sequential_rt.o
endif
$(RTLIBDIR)/classicladder_rt.so: $(addprefix $(OBJDIR)/,$(classicladder_rt-objs))
